// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package sql_queries

import (
	"context"
)

const listStudents = `-- name: ListStudents :many
SELECT
    student_id, firstname, middlename, lastname, gender, birthday, form_of_education, personal_file_number, note
FROM
    Student
ORDER BY
    lastname
`

func (q *Queries) ListStudents(ctx context.Context) ([]Student, error) {
	rows, err := q.db.QueryContext(ctx, listStudents)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Student
	for rows.Next() {
		var i Student
		if err := rows.Scan(
			&i.StudentID,
			&i.Firstname,
			&i.Middlename,
			&i.Lastname,
			&i.Gender,
			&i.Birthday,
			&i.FormOfEducation,
			&i.PersonalFileNumber,
			&i.Note,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
